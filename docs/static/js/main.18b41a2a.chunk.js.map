{"version":3,"sources":["logo.svg","static/constants.js","combat.js","spellbook.js","Encounter.js","static/playerInit.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","constants","BASE_HIT_NUMBER","HIT_DICE_SIDES","resolveMelee","attacker","defender","console","log","hitNum","stats","acc","eva","Math","floor","random","damage","max","baseDmg","str","def","combatDamage","concat","name","glanceDmg","hp","critDmg","logMessage","spellbook","id","type","cost","effect","debuffStr","debuffDef","debuffAcc","debuffEva","con","heal","getSpells","numSpells","length","spellIndexes","randSpellIndex","indexOf","push","spellArray","forEach","index","Encounter","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","castSpell","spell","assertThisInitialized","newLog","addLogMessage","state","combatLog","newVals","resolveSpell","player","enemy","cards","newestLog","setState","enableAction","_displayActions","displayActions","bind","_attack","attack","_defend","defend","_draw","_this2","draw","apply","arguments","react_default","a","createElement","className","dist","onPress","_this$state","updatePlayer","objectSpread","toConsumableArray","newMessage","unshift","pop","entity","newProps","prevProps","displayEntity","Encounter_Hand","handler","Encounter_CombatLog","logs","Component","Hand","_ref","_ref$cards","_ref$handler","map","card","key","statStrings","join","costString","effectStrings","effectString","onClick","CombatLog","_ref2","_ref2$logs","playerInit","World","ld44_src_Encounter","App","App_World","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.18b41a2a.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","const constants = {\n  BASE_HIT_NUMBER: 8,\n  HIT_DICE_SIDES: 12\n}\nexport default constants;\n","import constants from './static/constants';\n\n/*\n * determines base combat damage for melee between two entities\n * returns damage\n */\nfunction combatDamage(attacker, defender) {\n    return attacker.baseDmg + attacker.stats.str - defender.stats.def;\n}\n\nfunction resolveMelee(attacker, defender) {\n    console.log('In resolveMelee')\n    let hitNum = constants.BASE_HIT_NUMBER + attacker.stats.acc - defender.stats.eva + Math.floor((Math.random() * constants.HIT_DICE_SIDES) + 1);\n    let damage = Math.max(combatDamage(attacker, defender), 0);\n    let log;\n    if (hitNum <= 1) { // Miss\n        log = `${attacker.name} fails to land a hit! ${defender.name} received no damage!`;\n    } else if (hitNum <= 10 && hitNum >= 2) { // glancing blow\n        let glanceDmg = Math.floor(damage*0.5);\n        defender.hp = defender.hp - glanceDmg;\n        log = `${attacker.name} lands a glancing blow upon ${defender.name}. ${glanceDmg} damage was dealt`;\n    } else if (hitNum >=20) { // critical hit\n        let critDmg = Math.max(damage*2, 1);\n        defender.hp = defender.hp - critDmg;\n        log = `${attacker.name} lands a critical hit! ${critDmg} damage oozes out from ${defender.name}`;\n    } else { // hitNum <=19 && hitNum >=11, normal hit\n        defender.hp = defender.hp - damage;\n        log = `${attacker.name} hits ${defender.name}. ${damage} damage was dealt`;\n    }\n    console.log('Out resolveMelee')\n\n    return {attacker: attacker, defender: defender, logMessage: log};\n}\n\nfunction resolveSpell(attacker, defender, spell) {\n    // Deal with cost first\n    if (spell.cost.str) {\n        attacker.stats.str = attacker.stats.str - spell.cost.str;\n    }\n    if (spell.cost.def) {\n        attacker.stats.def = attacker.stats.def - spell.cost.def;\n    }\n    if (spell.cost.acc) {\n        attacker.stats.acc = attacker.stats.acc - spell.cost.acc;\n    }\n    if (spell.cost.eva) {\n        attacker.stats.eva = attacker.stats.eva - spell.cost.eva;\n    }\n    if (spell.cost.con) {\n        attacker.stats.con = attacker.stats.con - spell.cost.con;\n    }\n\n    // resolve spell effect & flavor text\n    let log;\n    if (spell.effect.damage) {\n        defender.hp = defender.hp - spell.effect.damage;\n        log = `${defender.name} is seared for ${spell.effect.damage} magical damage!`;\n    }\n    if (spell.effect.debuffStr) {\n        defender.stats.str = Math.max(defender.stats.str - spell.effect.debuffStr, 0);\n        log = `${defender.name} appears to struggle lifting their weapon`;\n    }\n    if (spell.effect.debuffDef) {\n        defender.stats.def = Math.max(defender.stats.def - spell.effect.debuffDef, 0);\n        log = `${defender.name} looks confused and is no longer bracing themselves against an attack`;\n    }\n    if (spell.effect.debuffAcc) {\n        defender.stats.acc = Math.max(defender.stats.acc - spell.effect.debuffAcc, 0);\n        log = `${defender.name} squints their eyes as they look off to your left`;\n    }\n    if (spell.effect.debuffEva) {\n        defender.stats.eva = Math.max(defender.stats.eva - spell.effect.debuffEva, 0);\n        log = `${defender.name} stumbles around as they loose their footing`;\n    }\n    if (spell.effect.heal) {\n        attacker.hp = attacker.stats.con;\n        log = \"As your wounds close, you feel much better.  Kind of...\";\n    }\n    return {attacker: attacker, defender: defender, logMessage: log};\n}\nexport {resolveMelee, resolveSpell};\n","const spellbook = [\n    {\n        id: 0,\n        name: 'Earthquake',\n        type: 'damage',\n        cost: { str: 1 },\n        effect: { damage: 5 }\n    },{\n        id: 1,\n        name: 'Blood Boil',\n        type: 'damage',\n        cost: { def: 1 },\n        effect: { damage: 5 }\n    },{\n        id: 2,\n        name: 'Bolt Throw',\n        type: 'damage',\n        cost: { acc: 1 },\n        effect: { damage: 5 }\n    },{\n        id: 3,\n        name: 'Shadow Strike',\n        type: 'damage',\n        cost: { eva: 1 },\n        effect: { damage: 5 }\n    },{\n        id: 4,\n        name: 'Sap',\n        type: 'debuff',\n        cost: { acc: 1 },\n        effect: { debuffStr: 5 }\n    },{\n        id: 5,\n        name: 'Fraility',\n        type: 'debuff',\n        cost: { eva: 1 },\n        effect: { debuffStr: 5 }\n    },{\n        id: 6,\n        name: 'Bewilder',\n        type: 'debuff',\n        cost: { acc: 1 },\n        effect: { debuffDef: 5 }\n    },{\n        id: 7,\n        name: 'Spore Cloud',\n        type: 'debuff',\n        cost: { eva: 1 },\n        effect: { debuffDef: 5 }\n    },{\n        id: 8,\n        name: 'Haze',\n        type: 'debuff',\n        cost: { str: 1 },\n        effect: { debuffAcc: 5 }\n    },{\n        id: 9,\n        name: 'Dust Devil',\n        type: 'debuff',\n        cost: { def: 1 },\n        effect: { debuffAcc: 5 }\n    },{\n        id: 10,\n        name: 'Sand Trap',\n        type: 'debuff',\n        cost: { str: 1 },\n        effect: { debuffEva: 5 }\n    },{\n        id: 11,\n        name: 'Freeze',\n        type: 'debuff',\n        cost: { def: 1 },\n        effect: { debuffEva: 5 }\n    },{\n        id: 12,\n        name: 'Cauterize',\n        type: 'heal',\n        cost: { con: 1 },\n        effect: { heal: 1 }\n    },{\n        id: 13,\n        name: 'Cauterize',\n        type: 'heal',\n        cost: { con: 1 },\n        effect: { heal: 1 }\n    },{\n        id: 14,\n        name: 'Cauterize',\n        type: 'heal',\n        cost: { con: 1 },\n        effect: { heal: 1 }\n    }\n];\n\nfunction getSpells(numSpells) {\n    // If asking for more spells than we know, return them all\n    if (numSpells >= spellbook.length) {\n        return spellbook;\n    }\n\n    // Generate unique random numbers\n    let spellIndexes = [];\n    while (spellIndexes.length < numSpells) {\n        let randSpellIndex = Math.floor(Math.random() * spellbook.length);\n        if (-1 === spellIndexes.indexOf(randSpellIndex)) {\n            spellIndexes.push(randSpellIndex);\n        }\n    }\n\n    // Use those numbers to generate random spell list\n    let spellArray = [];\n    spellIndexes.forEach((index) => {\n        spellArray.push(spellbook[index]);\n    });\n    return spellArray;\n}\n\nexport default getSpells;\n","import React, { Component } from 'react';\nimport { AwesomeButton } from 'react-awesome-button';\nimport AwesomeButtonStyles from \"react-awesome-button/src/styles/styles.scss\";\n\nimport './Encounter.css';\nimport { resolveMelee, resolveSpell } from './combat';\nimport getSpells from './spellbook';\n\nclass Encounter extends Component {\n    constructor() {\n        super();\n        this.state = {\n            player: {\n                stats: {}\n            },\n            enemy: {\n                stats: {}\n            },\n            enableAction: true,\n            combatLog: []\n        }\n\n        this._displayActions = this.displayActions.bind(this);\n        this._attack = this.attack.bind(this);\n        this._defend = this.defend.bind(this);\n        this._draw = (...args) => this.draw(...args);\n    }\n\n    displayActions() {\n        if (this.state.player.cards && this.state.player.cards.length !== 0) {\n            return (<div className='button-box'/>);\n        }\n        return (\n            <div className='button-box'>\n                <AwesomeButton\n                    type='primary'\n                    // cssModule={ AwesomeButtonStyles }\n                    onPress={ this._attack }\n                >\n                    Attack\n                </AwesomeButton>\n                <AwesomeButton\n                    type=\"secondary\"\n                    onPress={ this._draw }\n                >\n                    Cast Blood Magic\n                </AwesomeButton>\n            </div>\n        )\n    }\n\n    attack() {\n        console.log('In attack')\n        if (this.state.enableAction) {\n            const newVals = resolveMelee(this.state.player, this.state.enemy);\n            console.log('!!', newVals);\n            const newLog = this.addLogMessage(this.state.combatLog, newVals.logMessage);\n            this.setState({ player: newVals.attacker, enemy: newVals.defender, enableAction:false, combatLog: newLog });\n        }\n    }\n\n    defend() {\n        console.log('In defend (being attacked)')\n        const newVals = resolveMelee(this.state.enemy, this.state.player);\n        const newLog = this.addLogMessage(this.state.combatLog, newVals.logMessage);\n        this.setState({ player: newVals.defender, enemy: newVals.attacker, enableAction:true, combatLog: newLog });\n    }\n\n    draw() {\n        console.log('draw');\n        const { player, updatePlayer } = this.state;\n        updatePlayer({\n            ...player,\n            cards: [...getSpells(3)]\n        });\n    }\n\n    castSpell=(spell) => {\n        console.log('in cast spell', spell, this)\n        const newLog = this.addLogMessage(this.state.combatLog, `You cast ${spell.name}`);\n        const newVals = resolveSpell(this.state.player, this.state.enemy, spell);\n        newVals.attacker.cards = [];\n        const newestLog = this.addLogMessage(newLog, newVals.logMessage);\n        this.setState({ player: newVals.attacker, enemy: newVals.defender, enableAction:false, combatLog: newestLog });\n    }\n\n    addLogMessage(log, newMessage) {\n        log.unshift(newMessage);\n        while (log.length > 10) {\n            log.pop();\n        }\n        return log;\n    }\n\n    displayEntity(entity) {\n        return (\n            <div className='entity-data'>\n                <div className='row'>\n                    <div className='info-column column'>\n                        { entity.name }\n                    </div>\n                    <div className='stat-name-column column'>\n                        Str\n                    </div>\n                    <div className='stat-value-column column'>\n                        { entity.stats.str }\n                    </div>\n                </div>\n                <div className='row'>\n                    <div className='info-column column'>\n                        Base DMG: { entity.baseDmg }\n                    </div>\n                    <div className='stat-name-column column'>\n                        Def\n                    </div>\n                    <div className='stat-value-column column'>\n                        { entity.stats.def }\n                    </div>\n                </div>\n                <div className='row'>\n                    <div className='info-column column'>\n                        HP: { entity.hp }\n                    </div>\n                    <div className='stat-name-column column'>\n                        Acc\n                    </div>\n                    <div className='stat-value-column column'>\n                        { entity.stats.acc }\n                    </div>\n                </div>\n                <div className='row'>\n                    <div className='info-column column'>\n                    </div>\n                    <div className='stat-name-column column'>\n                        Eva\n                    </div>\n                    <div className='stat-value-column column'>\n                        { entity.stats.eva }\n                    </div>\n                </div>\n                <div className='row'>\n                    <div className='info-column column'>\n                    </div>\n                    <div className='stat-name-column column'>\n                        Const\n                    </div>\n                    <div className='stat-value-column column'>\n                        { entity.stats.con }\n                    </div>\n                </div>\n            </div>\n        );\n    }\n\n    componentWillReceiveProps(newProps) {\n        const { player, enemy, updatePlayer } = newProps;\n        this.setState({ player, enemy, updatePlayer });\n    }\n\n    componentDidUpdate(prevProps) {\n        console.log('in component did update', prevProps)\n        if (this.state.enableAction === false) {\n            this.defend();\n        }\n    }\n\n    render() {\n        return (\n            <div>\n                { this.displayEntity(this.state.player) }\n                { this.displayEntity(this.state.enemy) }\n                { this.displayActions() }\n                <Hand cards={this.state.player.cards} handler={this.castSpell}/>\n                <CombatLog logs={this.state.combatLog} />\n            </div>\n        );\n    }\n}\n\nconst Hand = ({cards=[], handler=()=>{}}) => (\n    <div className=\"hand\">\n        {cards.map(card => (\n            <div className=\"card\" key={card.id}>\n                <div className=\"title\">{card.name}</div>\n                <div className=\"spacing\">\n                    <strong>Cost:</strong> {costString(card.cost)}<br/>\n                    <strong>Effect:</strong> {effectString(card.effect)}<br/>\n                </div>\n                <button className=\"action\" onClick={function() {handler(card);}}>Play!</button>\n            </div>\n        ))}\n    </div>\n);\n\nconst CombatLog = ({logs=[]}) => (\n    <div className=\"log-container\">\n        Combat Log:\n        {logs.map(log => (\n            <div className=\"log-message\">\n                {log}\n            </div>\n        ))}\n    </div>\n);\n\nfunction costString(cost) {\n    let statStrings = [];\n    if (cost.str) {\n        statStrings.push(`-${cost.str} STR`);\n    }\n    if (cost.def) {\n        statStrings.push(`-${cost.def} DEF`);\n    }\n    if (cost.acc) {\n        statStrings.push(`-${cost.acc} ACC`);\n    }\n    if (cost.eva) {\n        statStrings.push(`-${cost.eva} EVA`);\n    }\n    if (cost.con) {\n        statStrings.push(`-${cost.con} CON`);\n    }\n    return statStrings.join(', ');\n}\n\nfunction effectString(effect) {\n    let effectStrings = [];\n    if (effect.damage) {\n        effectStrings.push(`Deals ${ effect.damage} magical damage`);\n    }\n    if (effect.debuffStr) {\n        effectStrings.push(`Lowers enemy STR by ${effect.debuffStr}`);\n    }\n    if (effect.debuffDef) {\n        effectStrings.push(`Lowers enemy DEF by ${effect.debuffDef}`);\n    }\n    if (effect.debuffAcc) {\n        effectStrings.push(`Lowers enemy ACC by ${effect.debuffAcc}`);\n    }\n    if (effect.debuffEva) {\n        effectStrings.push(`Lowers enemy EVA by ${effect.debuffEva}`);\n    }\n    if (effect.heal) {\n        effectStrings.push(`Heals your HP back to full`);\n    }\n    return effectStrings.join('<br/>');\n}\n\nexport default Encounter;\n","const startingHealth = 10;\n\nconst playerInit = {\n    name: 'Player',\n    stats: {\n        acc: 10,\n        eva: 10,\n        str: 10,\n        def: 10,\n        con: startingHealth\n    },\n    baseDmg: 2,\n    hp: startingHealth,\n    cards: []\n}\n\nexport default playerInit;\n","import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\n\nimport Encounter from './Encounter';\nimport playerInit from './static/playerInit';\n\nclass World extends Component {\n    constructor() {\n        super();\n        this.state = {\n            player: {\n                stats: {},\n                baseDmg: 2,\n                cards: []\n            }\n        }\n\n        this.updatePlayer = this.updatePlayer.bind(this);\n    }\n\n    updatePlayer(player) {\n        this.setState({ player });\n    }\n\n    componentDidMount() {\n        this.setState({ player: playerInit });\n\n        const testEnemy = {\n            name: 'Reaper',\n            stats: {\n                acc: 10,\n                eva: 10,\n                str: 8,\n                def: 5,\n                con: 10\n            },\n            baseDmg: 1,\n            hp: 10\n        };\n        this.setState({ enemy: testEnemy });\n    }\n\n    render() {\n        return (\n            <div className='World'>\n                <Encounter player={ this.state.player } enemy={ this.state.enemy } updatePlayer={ this.updatePlayer } />\n            </div>\n        );\n    }\n}\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n        <World />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}